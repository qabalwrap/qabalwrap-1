// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: message-idl.proto

package qbw1grpcgen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceIdent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueIdent              string `protobuf:"bytes,1,opt,name=unique_ident,json=uniqueIdent,proto3" json:"unique_ident,omitempty"`
	SerialIdent              int32  `protobuf:"varint,2,opt,name=serial_ident,json=serialIdent,proto3" json:"serial_ident,omitempty"`
	TextIdent                string `protobuf:"bytes,3,opt,name=text_ident,json=textIdent,proto3" json:"text_ident,omitempty"`
	PublicKey                []byte `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	LinkHopCount             int32  `protobuf:"varint,5,opt,name=link_hop_count,json=linkHopCount,proto3" json:"link_hop_count,omitempty"`
	LinkHopSwitchSerialIdent int32  `protobuf:"varint,6,opt,name=link_hop_switch_serial_ident,json=linkHopSwitchSerialIdent,proto3" json:"link_hop_switch_serial_ident,omitempty"`
}

func (x *ServiceIdent) Reset() {
	*x = ServiceIdent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceIdent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceIdent) ProtoMessage() {}

func (x *ServiceIdent) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceIdent.ProtoReflect.Descriptor instead.
func (*ServiceIdent) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceIdent) GetUniqueIdent() string {
	if x != nil {
		return x.UniqueIdent
	}
	return ""
}

func (x *ServiceIdent) GetSerialIdent() int32 {
	if x != nil {
		return x.SerialIdent
	}
	return 0
}

func (x *ServiceIdent) GetTextIdent() string {
	if x != nil {
		return x.TextIdent
	}
	return ""
}

func (x *ServiceIdent) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ServiceIdent) GetLinkHopCount() int32 {
	if x != nil {
		return x.LinkHopCount
	}
	return 0
}

func (x *ServiceIdent) GetLinkHopSwitchSerialIdent() int32 {
	if x != nil {
		return x.LinkHopSwitchSerialIdent
	}
	return 0
}

type KnownServiceIdents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimarySerialIdent     int32           `protobuf:"varint,1,opt,name=primary_serial_ident,json=primarySerialIdent,proto3" json:"primary_serial_ident,omitempty"`
	LocalSwitchSerialIdent int32           `protobuf:"varint,5,opt,name=local_switch_serial_ident,json=localSwitchSerialIdent,proto3" json:"local_switch_serial_ident,omitempty"`
	MaxSerialIdent         int32           `protobuf:"varint,2,opt,name=max_serial_ident,json=maxSerialIdent,proto3" json:"max_serial_ident,omitempty"`
	ServiceIdents          []*ServiceIdent `protobuf:"bytes,3,rep,name=service_idents,json=serviceIdents,proto3" json:"service_idents,omitempty"`
	GenerationTimestamp    int64           `protobuf:"varint,4,opt,name=generation_timestamp,json=generationTimestamp,proto3" json:"generation_timestamp,omitempty"`
}

func (x *KnownServiceIdents) Reset() {
	*x = KnownServiceIdents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnownServiceIdents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnownServiceIdents) ProtoMessage() {}

func (x *KnownServiceIdents) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnownServiceIdents.ProtoReflect.Descriptor instead.
func (*KnownServiceIdents) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{1}
}

func (x *KnownServiceIdents) GetPrimarySerialIdent() int32 {
	if x != nil {
		return x.PrimarySerialIdent
	}
	return 0
}

func (x *KnownServiceIdents) GetLocalSwitchSerialIdent() int32 {
	if x != nil {
		return x.LocalSwitchSerialIdent
	}
	return 0
}

func (x *KnownServiceIdents) GetMaxSerialIdent() int32 {
	if x != nil {
		return x.MaxSerialIdent
	}
	return 0
}

func (x *KnownServiceIdents) GetServiceIdents() []*ServiceIdent {
	if x != nil {
		return x.ServiceIdents
	}
	return nil
}

func (x *KnownServiceIdents) GetGenerationTimestamp() int64 {
	if x != nil {
		return x.GenerationTimestamp
	}
	return 0
}

type AllocateServiceIdentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceIdents []*ServiceIdent `protobuf:"bytes,1,rep,name=service_idents,json=serviceIdents,proto3" json:"service_idents,omitempty"`
}

func (x *AllocateServiceIdentsRequest) Reset() {
	*x = AllocateServiceIdentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateServiceIdentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateServiceIdentsRequest) ProtoMessage() {}

func (x *AllocateServiceIdentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateServiceIdentsRequest.ProtoReflect.Descriptor instead.
func (*AllocateServiceIdentsRequest) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{2}
}

func (x *AllocateServiceIdentsRequest) GetServiceIdents() []*ServiceIdent {
	if x != nil {
		return x.ServiceIdents
	}
	return nil
}

type HostCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostDNSName  string `protobuf:"bytes,1,opt,name=hostDNSName,proto3" json:"hostDNSName,omitempty"`
	RequestIdent int32  `protobuf:"varint,2,opt,name=request_ident,json=requestIdent,proto3" json:"request_ident,omitempty"`
}

func (x *HostCertificateRequest) Reset() {
	*x = HostCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCertificateRequest) ProtoMessage() {}

func (x *HostCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCertificateRequest.ProtoReflect.Descriptor instead.
func (*HostCertificateRequest) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{3}
}

func (x *HostCertificateRequest) GetHostDNSName() string {
	if x != nil {
		return x.HostDNSName
	}
	return ""
}

func (x *HostCertificateRequest) GetRequestIdent() int32 {
	if x != nil {
		return x.RequestIdent
	}
	return 0
}

type HostCertificateAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostDNSName  string `protobuf:"bytes,1,opt,name=hostDNSName,proto3" json:"hostDNSName,omitempty"`
	CertDer      []byte `protobuf:"bytes,2,opt,name=cert_der,json=certDer,proto3" json:"cert_der,omitempty"`
	PrivateKey   []byte `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	RequestIdent int32  `protobuf:"varint,4,opt,name=request_ident,json=requestIdent,proto3" json:"request_ident,omitempty"`
}

func (x *HostCertificateAssignment) Reset() {
	*x = HostCertificateAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostCertificateAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCertificateAssignment) ProtoMessage() {}

func (x *HostCertificateAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCertificateAssignment.ProtoReflect.Descriptor instead.
func (*HostCertificateAssignment) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{4}
}

func (x *HostCertificateAssignment) GetHostDNSName() string {
	if x != nil {
		return x.HostDNSName
	}
	return ""
}

func (x *HostCertificateAssignment) GetCertDer() []byte {
	if x != nil {
		return x.CertDer
	}
	return nil
}

func (x *HostCertificateAssignment) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *HostCertificateAssignment) GetRequestIdent() int32 {
	if x != nil {
		return x.RequestIdent
	}
	return 0
}

type RootCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RootCertificateRequest) Reset() {
	*x = RootCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootCertificateRequest) ProtoMessage() {}

func (x *RootCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootCertificateRequest.ProtoReflect.Descriptor instead.
func (*RootCertificateRequest) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{5}
}

func (x *RootCertificateRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type RootCertificateAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CertDer   []byte `protobuf:"bytes,2,opt,name=cert_der,json=certDer,proto3" json:"cert_der,omitempty"`
}

func (x *RootCertificateAssignment) Reset() {
	*x = RootCertificateAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootCertificateAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootCertificateAssignment) ProtoMessage() {}

func (x *RootCertificateAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootCertificateAssignment.ProtoReflect.Descriptor instead.
func (*RootCertificateAssignment) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{6}
}

func (x *RootCertificateAssignment) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RootCertificateAssignment) GetCertDer() []byte {
	if x != nil {
		return x.CertDer
	}
	return nil
}

type KeyValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *KeyValues) Reset() {
	*x = KeyValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValues) ProtoMessage() {}

func (x *KeyValues) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValues.ProtoReflect.Descriptor instead.
func (*KeyValues) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{7}
}

func (x *KeyValues) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValues) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type HTTPContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestIdent  int32        `protobuf:"varint,1,opt,name=request_ident,json=requestIdent,proto3" json:"request_ident,omitempty"`
	ResponseIdent int32        `protobuf:"varint,2,opt,name=response_ident,json=responseIdent,proto3" json:"response_ident,omitempty"`
	UrlPath       string       `protobuf:"bytes,3,opt,name=url_path,json=urlPath,proto3" json:"url_path,omitempty"`
	UrlQuery      string       `protobuf:"bytes,4,opt,name=url_query,json=urlQuery,proto3" json:"url_query,omitempty"`
	RequestMethod string       `protobuf:"bytes,5,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`
	RequestHost   string       `protobuf:"bytes,6,opt,name=request_host,json=requestHost,proto3" json:"request_host,omitempty"`
	Headers       []*KeyValues `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty"`
	ContentBody   []byte       `protobuf:"bytes,8,opt,name=content_body,json=contentBody,proto3" json:"content_body,omitempty"`
	IsComplete    bool         `protobuf:"varint,9,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
}

func (x *HTTPContentRequest) Reset() {
	*x = HTTPContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPContentRequest) ProtoMessage() {}

func (x *HTTPContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPContentRequest.ProtoReflect.Descriptor instead.
func (*HTTPContentRequest) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{8}
}

func (x *HTTPContentRequest) GetRequestIdent() int32 {
	if x != nil {
		return x.RequestIdent
	}
	return 0
}

func (x *HTTPContentRequest) GetResponseIdent() int32 {
	if x != nil {
		return x.ResponseIdent
	}
	return 0
}

func (x *HTTPContentRequest) GetUrlPath() string {
	if x != nil {
		return x.UrlPath
	}
	return ""
}

func (x *HTTPContentRequest) GetUrlQuery() string {
	if x != nil {
		return x.UrlQuery
	}
	return ""
}

func (x *HTTPContentRequest) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *HTTPContentRequest) GetRequestHost() string {
	if x != nil {
		return x.RequestHost
	}
	return ""
}

func (x *HTTPContentRequest) GetHeaders() []*KeyValues {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPContentRequest) GetContentBody() []byte {
	if x != nil {
		return x.ContentBody
	}
	return nil
}

func (x *HTTPContentRequest) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

type HTTPContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseIdent   int32        `protobuf:"varint,1,opt,name=response_ident,json=responseIdent,proto3" json:"response_ident,omitempty"`
	RequestIdent    int32        `protobuf:"varint,2,opt,name=request_ident,json=requestIdent,proto3" json:"request_ident,omitempty"`
	ResultStateCode int32        `protobuf:"varint,3,opt,name=result_state_code,json=resultStateCode,proto3" json:"result_state_code,omitempty"`
	Headers         []*KeyValues `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty"`
	ContentBody     []byte       `protobuf:"bytes,5,opt,name=content_body,json=contentBody,proto3" json:"content_body,omitempty"`
	IsComplete      bool         `protobuf:"varint,6,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
}

func (x *HTTPContentResponse) Reset() {
	*x = HTTPContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPContentResponse) ProtoMessage() {}

func (x *HTTPContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPContentResponse.ProtoReflect.Descriptor instead.
func (*HTTPContentResponse) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{9}
}

func (x *HTTPContentResponse) GetResponseIdent() int32 {
	if x != nil {
		return x.ResponseIdent
	}
	return 0
}

func (x *HTTPContentResponse) GetRequestIdent() int32 {
	if x != nil {
		return x.RequestIdent
	}
	return 0
}

func (x *HTTPContentResponse) GetResultStateCode() int32 {
	if x != nil {
		return x.ResultStateCode
	}
	return 0
}

func (x *HTTPContentResponse) GetHeaders() []*KeyValues {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPContentResponse) GetContentBody() []byte {
	if x != nil {
		return x.ContentBody
	}
	return nil
}

func (x *HTTPContentResponse) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

type HeartbeatPingPong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTimestamp  int64 `protobuf:"varint,1,opt,name=create_timestamp,json=createTimestamp,proto3" json:"create_timestamp,omitempty"`
	ReceiveTimestamp int64 `protobuf:"varint,2,opt,name=receive_timestamp,json=receiveTimestamp,proto3" json:"receive_timestamp,omitempty"`
}

func (x *HeartbeatPingPong) Reset() {
	*x = HeartbeatPingPong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_idl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatPingPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatPingPong) ProtoMessage() {}

func (x *HeartbeatPingPong) ProtoReflect() protoreflect.Message {
	mi := &file_message_idl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatPingPong.ProtoReflect.Descriptor instead.
func (*HeartbeatPingPong) Descriptor() ([]byte, []int) {
	return file_message_idl_proto_rawDescGZIP(), []int{10}
}

func (x *HeartbeatPingPong) GetCreateTimestamp() int64 {
	if x != nil {
		return x.CreateTimestamp
	}
	return 0
}

func (x *HeartbeatPingPong) GetReceiveTimestamp() int64 {
	if x != nil {
		return x.ReceiveTimestamp
	}
	return 0
}

var File_message_idl_proto protoreflect.FileDescriptor

var file_message_idl_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x69, 0x64, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x71, 0x61, 0x62, 0x61, 0x6c, 0x77, 0x72, 0x61, 0x70, 0x31, 0x22,
	0xf8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x68, 0x6f, 0x70,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x69,
	0x6e, 0x6b, 0x48, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x1c, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x18, 0x6c, 0x69, 0x6e, 0x6b, 0x48, 0x6f, 0x70, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x9f, 0x02, 0x0a, 0x12, 0x4b,
	0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x71, 0x61, 0x62, 0x61, 0x6c, 0x77, 0x72, 0x61, 0x70, 0x31, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5f, 0x0a, 0x1c,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x61, 0x62, 0x61, 0x6c, 0x77, 0x72, 0x61, 0x70,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x5f, 0x0a,
	0x16, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x44,
	0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f,
	0x73, 0x74, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x9e,
	0x01, 0x0a, 0x19, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x6f, 0x73, 0x74, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x63, 0x65, 0x72, 0x74, 0x44, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x22,
	0x36, 0x0a, 0x16, 0x52, 0x6f, 0x6f, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x54, 0x0a, 0x19, 0x52, 0x6f, 0x6f, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x65, 0x72, 0x74, 0x44, 0x65, 0x72, 0x22, 0x35, 0x0a,
	0x09, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0xd7, 0x02, 0x0a, 0x12, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x72, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x72, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x61, 0x62,
	0x61, 0x6c, 0x77, 0x72, 0x61, 0x70, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x82,
	0x02, 0x0a, 0x13, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x71, 0x61, 0x62, 0x61, 0x6c, 0x77, 0x72, 0x61, 0x70, 0x31, 0x2e, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x22, 0x6b, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71,
	0x61, 0x62, 0x61, 0x6c, 0x77, 0x72, 0x61, 0x70, 0x2f, 0x71, 0x61, 0x62, 0x61, 0x6c, 0x77, 0x72,
	0x61, 0x70, 0x2d, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x71, 0x62, 0x77, 0x31, 0x67, 0x72, 0x70,
	0x63, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_idl_proto_rawDescOnce sync.Once
	file_message_idl_proto_rawDescData = file_message_idl_proto_rawDesc
)

func file_message_idl_proto_rawDescGZIP() []byte {
	file_message_idl_proto_rawDescOnce.Do(func() {
		file_message_idl_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_idl_proto_rawDescData)
	})
	return file_message_idl_proto_rawDescData
}

var file_message_idl_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_message_idl_proto_goTypes = []interface{}{
	(*ServiceIdent)(nil),                 // 0: qabalwrap1.ServiceIdent
	(*KnownServiceIdents)(nil),           // 1: qabalwrap1.KnownServiceIdents
	(*AllocateServiceIdentsRequest)(nil), // 2: qabalwrap1.AllocateServiceIdentsRequest
	(*HostCertificateRequest)(nil),       // 3: qabalwrap1.HostCertificateRequest
	(*HostCertificateAssignment)(nil),    // 4: qabalwrap1.HostCertificateAssignment
	(*RootCertificateRequest)(nil),       // 5: qabalwrap1.RootCertificateRequest
	(*RootCertificateAssignment)(nil),    // 6: qabalwrap1.RootCertificateAssignment
	(*KeyValues)(nil),                    // 7: qabalwrap1.KeyValues
	(*HTTPContentRequest)(nil),           // 8: qabalwrap1.HTTPContentRequest
	(*HTTPContentResponse)(nil),          // 9: qabalwrap1.HTTPContentResponse
	(*HeartbeatPingPong)(nil),            // 10: qabalwrap1.HeartbeatPingPong
}
var file_message_idl_proto_depIdxs = []int32{
	0, // 0: qabalwrap1.KnownServiceIdents.service_idents:type_name -> qabalwrap1.ServiceIdent
	0, // 1: qabalwrap1.AllocateServiceIdentsRequest.service_idents:type_name -> qabalwrap1.ServiceIdent
	7, // 2: qabalwrap1.HTTPContentRequest.headers:type_name -> qabalwrap1.KeyValues
	7, // 3: qabalwrap1.HTTPContentResponse.headers:type_name -> qabalwrap1.KeyValues
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_message_idl_proto_init() }
func file_message_idl_proto_init() {
	if File_message_idl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_idl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceIdent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnownServiceIdents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateServiceIdentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostCertificateAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootCertificateAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_idl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatPingPong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_idl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_idl_proto_goTypes,
		DependencyIndexes: file_message_idl_proto_depIdxs,
		MessageInfos:      file_message_idl_proto_msgTypes,
	}.Build()
	File_message_idl_proto = out.File
	file_message_idl_proto_rawDesc = nil
	file_message_idl_proto_goTypes = nil
	file_message_idl_proto_depIdxs = nil
}
